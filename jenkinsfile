#!groovy

properties([disableConcurrentBuilds()])

pipeline {

          parameters {
                  text name: 'multiline', defaultValue: '', description: 'multiline text'
                   }
         agent any
         stages {
                 stage('Build') {
                    steps {
                       echo "Hi, man. Starting to build the App. ${params.multiline}"
                          }
                 }
                 stage('Test') {
                    steps {
                              script {
                                        def keyPair = [:]
                                        def multiline = params.multiline
                                        multiline.split("\n").each { String line ->
                                              echo "$line"
                                          }
                                        def map = multiline
                                        .split("\n")
                                        .collectEntries{ entry ->
                                                  def parts = entry.split(': ')
                                                  [(parts[0]): parts[1]]
                                        }
                                        echo "$map"
                              }
                       
                       //input('Do you want to proceed?')
                          }
                 }
                 stage('Deploy') {
                    steps {
                       echo "Start the deploy .."
                       sh "pwd"
                       sh "ls -al"
                       //ansiblePlaybook(
                       //   vaultCredentialsId: 'AnsibleVault',
                       //   inventory: "localhost,",
                       //   playbook: 'onboarding_project.yml'
                       //   )
                           }
                 }
                 stage('Prod') {
                    steps {
                       echo "App is Prod Ready"
                          }

              }
         }
}
